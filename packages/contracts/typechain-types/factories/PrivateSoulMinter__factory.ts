/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PrivateSoulMinter,
  PrivateSoulMinterInterface,
} from "../PrivateSoulMinter";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Soulbound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "claimSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "issuers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "metaURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "claimHashMetadata",
        type: "bytes32",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "souls",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523373ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525060016006556080516114ce610057600039600061068801526114ce6000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063ad0e303711610064578063ad0e30371461038d578063b88d4fde146103ca578063c87b56dd146103f3578063d34047b614610430578063e985e9c51461044c57610109565b80638da5cb5b146102d157806395d89b41146102fc578063a22cb46514610327578063a24f81371461035057610109565b806323b872dd116100dc57806323b872dd146101c857806342842e0e146101f157806361ec30c41461021a5780636352211e1461025757806370a082311461029457610109565b806301ffc9a71461010e57806306fdde031461014b578063081812fc14610176578063095ea7b31461019f575b600080fd5b34801561011a57600080fd5b5061013560048036038101906101309190610acc565b610475565b6040516101429190610b14565b60405180910390f35b34801561015757600080fd5b50610160610507565b60405161016d9190610bbf565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190610c17565b610540565b005b3480156101ab57600080fd5b506101c660048036038101906101c19190610ca2565b610572565b005b3480156101d457600080fd5b506101ef60048036038101906101ea9190610ce2565b6105a4565b005b3480156101fd57600080fd5b5061021860048036038101906102139190610ce2565b6105d6565b005b34801561022657600080fd5b50610241600480360381019061023c9190610c17565b610608565b60405161024e9190610d44565b60405180910390f35b34801561026357600080fd5b5061027e60048036038101906102799190610c17565b61063b565b60405161028b9190610d44565b60405180910390f35b3480156102a057600080fd5b506102bb60048036038101906102b69190610d5f565b61066e565b6040516102c89190610d9b565b60405180910390f35b3480156102dd57600080fd5b506102e6610686565b6040516102f39190610d44565b60405180910390f35b34801561030857600080fd5b506103116106aa565b60405161031e9190610bbf565b60405180910390f35b34801561033357600080fd5b5061034e60048036038101906103499190610de2565b6106e3565b005b34801561035c57600080fd5b5061037760048036038101906103729190610d5f565b610715565b6040516103849190610d9b565b60405180910390f35b34801561039957600080fd5b506103b460048036038101906103af9190610c17565b61072d565b6040516103c19190610e3b565b60405180910390f35b3480156103d657600080fd5b506103f160048036038101906103ec9190610ebb565b610745565b005b3480156103ff57600080fd5b5061041a60048036038101906104159190610c17565b610777565b6040516104279190610bbf565b60405180910390f35b61044a60048036038101906104459190610fc5565b610817565b005b34801561045857600080fd5b50610473600480360381019061046e9190611039565b610a38565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104d057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806105005750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6040518060400160405280600d81526020017f536f756c626f756e64204e46540000000000000000000000000000000000000081525081565b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6040518060400160405280600481526020017f534f554c0000000000000000000000000000000000000000000000000000000081525081565b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60056020528060005260406000206000915090505481565b60016020528060005260406000206000915090505481565b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006020528060005260406000206000915090508054610796906110a8565b80601f01602080910402602001604051908101604052809291908181526020018280546107c2906110a8565b801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b505050505081565b6001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610899576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108909061114b565b60405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055508360026000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082826000806006548152602001908152602001600020918261095f929190611351565b508060016000600654815260200190815260200160002081905550600654600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600660008154809291906109d390611450565b919050558473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6040517fa4420a9500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610aa981610a74565b8114610ab457600080fd5b50565b600081359050610ac681610aa0565b92915050565b600060208284031215610ae257610ae1610a6a565b5b6000610af084828501610ab7565b91505092915050565b60008115159050919050565b610b0e81610af9565b82525050565b6000602082019050610b296000830184610b05565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b69578082015181840152602081019050610b4e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b9182610b2f565b610b9b8185610b3a565b9350610bab818560208601610b4b565b610bb481610b75565b840191505092915050565b60006020820190508181036000830152610bd98184610b86565b905092915050565b6000819050919050565b610bf481610be1565b8114610bff57600080fd5b50565b600081359050610c1181610beb565b92915050565b600060208284031215610c2d57610c2c610a6a565b5b6000610c3b84828501610c02565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c6f82610c44565b9050919050565b610c7f81610c64565b8114610c8a57600080fd5b50565b600081359050610c9c81610c76565b92915050565b60008060408385031215610cb957610cb8610a6a565b5b6000610cc785828601610c8d565b9250506020610cd885828601610c02565b9150509250929050565b600080600060608486031215610cfb57610cfa610a6a565b5b6000610d0986828701610c8d565b9350506020610d1a86828701610c8d565b9250506040610d2b86828701610c02565b9150509250925092565b610d3e81610c64565b82525050565b6000602082019050610d596000830184610d35565b92915050565b600060208284031215610d7557610d74610a6a565b5b6000610d8384828501610c8d565b91505092915050565b610d9581610be1565b82525050565b6000602082019050610db06000830184610d8c565b92915050565b610dbf81610af9565b8114610dca57600080fd5b50565b600081359050610ddc81610db6565b92915050565b60008060408385031215610df957610df8610a6a565b5b6000610e0785828601610c8d565b9250506020610e1885828601610dcd565b9150509250929050565b6000819050919050565b610e3581610e22565b82525050565b6000602082019050610e506000830184610e2c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e7b57610e7a610e56565b5b8235905067ffffffffffffffff811115610e9857610e97610e5b565b5b602083019150836001820283011115610eb457610eb3610e60565b5b9250929050565b600080600080600060808688031215610ed757610ed6610a6a565b5b6000610ee588828901610c8d565b9550506020610ef688828901610c8d565b9450506040610f0788828901610c02565b935050606086013567ffffffffffffffff811115610f2857610f27610a6f565b5b610f3488828901610e65565b92509250509295509295909350565b60008083601f840112610f5957610f58610e56565b5b8235905067ffffffffffffffff811115610f7657610f75610e5b565b5b602083019150836001820283011115610f9257610f91610e60565b5b9250929050565b610fa281610e22565b8114610fad57600080fd5b50565b600081359050610fbf81610f99565b92915050565b60008060008060608587031215610fdf57610fde610a6a565b5b6000610fed87828801610c8d565b945050602085013567ffffffffffffffff81111561100e5761100d610a6f565b5b61101a87828801610f43565b9350935050604061102d87828801610fb0565b91505092959194509250565b600080604083850312156110505761104f610a6a565b5b600061105e85828601610c8d565b925050602061106f85828601610c8d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110c057607f821691505b6020821081036110d3576110d2611079565b5b50919050565b7f596f752063616e206f6e6c792068617665206f6e6520746f6b656e206173736f60008201527f63696174656420746f20796f757220736f756c00000000000000000000000000602082015250565b6000611135603383610b3a565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111ca565b61121186836111ca565b95508019841693508086168417925050509392505050565b6000819050919050565b600061124e61124961124484610be1565b611229565b610be1565b9050919050565b6000819050919050565b61126883611233565b61127c61127482611255565b8484546111d7565b825550505050565b600090565b611291611284565b61129c81848461125f565b505050565b5b818110156112c0576112b5600082611289565b6001810190506112a2565b5050565b601f821115611305576112d6816111a5565b6112df846111ba565b810160208510156112ee578190505b6113026112fa856111ba565b8301826112a1565b50505b505050565b600082821c905092915050565b60006113286000198460080261130a565b1980831691505092915050565b60006113418383611317565b9150826002028217905092915050565b61135b838361116b565b67ffffffffffffffff81111561137457611373611176565b5b61137e82546110a8565b6113898282856112c4565b6000601f8311600181146113b857600084156113a6578287013590505b6113b08582611335565b865550611418565b601f1984166113c6866111a5565b60005b828110156113ee578489013582556001820191506020850194506020810190506113c9565b8683101561140b5784890135611407601f891682611317565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061145b82610be1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361148d5761148c611421565b5b60018201905091905056fea264697066735822122077f59ebe9df04c315b959591645883f2cd4fe36d274ee31d5a0d44cc5179f32564736f6c63430008110033";

type PrivateSoulMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateSoulMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateSoulMinter__factory extends ContractFactory {
  constructor(...args: PrivateSoulMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<PrivateSoulMinter> {
    return super.deploy(overrides || {}) as Promise<PrivateSoulMinter>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PrivateSoulMinter {
    return super.attach(address) as PrivateSoulMinter;
  }
  override connect(signer: Signer): PrivateSoulMinter__factory {
    return super.connect(signer) as PrivateSoulMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateSoulMinterInterface {
    return new utils.Interface(_abi) as PrivateSoulMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateSoulMinter {
    return new Contract(address, _abi, signerOrProvider) as PrivateSoulMinter;
  }
}
